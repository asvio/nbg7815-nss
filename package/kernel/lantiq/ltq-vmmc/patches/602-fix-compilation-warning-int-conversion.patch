--- a/src/mps/drv_mps_vmmc_common.c
+++ b/src/mps/drv_mps_vmmc_common.c
@@ -117,8 +117,8 @@ IFX_void_t ifx_mps_mbx_event_upstream (I
 #endif /* CONFIG_MPS_EVENT_MBX */
 IFX_void_t *ifx_mps_fastbuf_malloc (IFX_size_t size, IFX_int32_t priority);
 IFX_void_t ifx_mps_fastbuf_free (const IFX_void_t * ptr);
-IFX_int32_t ifx_mps_fastbuf_init (IFX_void_t);
-IFX_int32_t ifx_mps_fastbuf_close (IFX_void_t);
+IFX_return_t ifx_mps_fastbuf_init (IFX_void_t);
+IFX_return_t ifx_mps_fastbuf_close (IFX_void_t);
 IFX_uint32_t ifx_mps_reset_structures (mps_comm_dev * pDev);
 IFX_boolean_t ifx_mps_ext_bufman (IFX_void_t);
 extern IFX_uint32_t danube_get_cpu_ver (IFX_void_t);
--- a/src/mps/drv_mps_vmmc_device.h
+++ b/src/mps/drv_mps_vmmc_device.h
@@ -216,8 +216,8 @@ typedef struct /**< mps buffer monitorin
    mps_buffer_state_e buf_state;
    IFX_void_t *(*malloc) (IFX_size_t size, IFX_int32_t priority); /**< Buffer alloc function (def. kmalloc) */
    IFX_void_t (*free) (const IFX_void_t *ptr);  /**< Buffer free  function (def. kfree) */
-   IFX_int32_t (*init) (IFX_void_t); /** Manager init function */
-   IFX_int32_t (*close) (IFX_void_t); /** Manager shutdown function */
+   IFX_return_t (*init) (IFX_void_t); /** Manager init function */
+   IFX_return_t (*close) (IFX_void_t); /** Manager shutdown function */
 } mps_buf_mng_t;
 
 typedef IFX_uint32_t *mem_seg_t[MPS_MAX_PROVISION_SEGMENTS_PER_MSG];
